{"version":3,"sources":["assets/quimbly.png","store/actions.js","components/helperFunctions/saveConfig.js","lib/getEventsFromCalendars.js","lib/getUpcomingEvents.js","components/calendars.js","components/header/header.js","components/footer.js","components/layout.js","components/addEvent.js","store/data.js","components/helperFunctions/createConfig.js","components/helperFunctions/loadConfig.js","components/dailyOutline/nowLine.js","components/dailyOutline/events/eventLocations.js","components/dailyOutline/dailyOutline.js","App.js","store/reducer.js","store/index.js","index.js","config.js"],"names":["setCalendars","payload","type","setMyQCalendar","setConfig","toggleHideCalendar","setEvents","isLoggedIn","console","log","saveConfig","config","id","a","gapi","client","calendar","calendars","update","summary","description","JSON","stringify","calendarId","getEventsFromCalendars","visibleCalendars","map","events","list","Date","toISOString","getUpcomingEvents","filter","cal","hiddenCalendars","includes","promiseArray","parallel","apiCall","response","result","items","allEvents","eventArray","idx","event","color","backgroundColor","startTime","start","dateTime","date","endTime","end","flat","sort","b","slice","mapDispatchToProps","connect","state","DailyHabits","reduxData","loggedIn","myQCalendar","props","useState","c","selectedCalendars","setSelectedCalendars","toggleCalendar","e","target","value","chosenCalendar","newHiddenCalendars","i","then","FormControl","Select","multiple","input","Input","MenuItem","onChange","style","borderRadius","padding","defaultChecked","Header","src","quimbly","alt","Footer","Layout","this","children","React","Component","today","split","now","toLocaleTimeString","substring","oneHour","setHours","getHours","attendeeEmail","setAttendeeEmail","show","setShow","eventName","setEventName","location","setEventLocation","setDescription","eventDate","setEventDate","eventStartTime","setEventStartTime","eventEndTime","setEventEndTime","displayRecurringEvent","setDisplayRecurringEvent","recurringFrequency","setRecurringFrequency","recurringEndDate","setRecurringEndDate","startDateTime","moment","format","endDateTime","handleClose","Button","variant","onClick","Modal","open","onClose","Card","CardContent","Typography","component","TextField","label","defaultValue","email","FormGroup","FormControlLabel","control","Checkbox","InputLabel","formattedDate","replace","formattedDateStart","length","newformattedDate","timeZone","recurrence","insert","execute","htmlLink","dailyTasks","user","window","data","createConfig","find","parse","err","error","loadConfig","NowLine","nowLineStyle","width","height","borderBottom","position","top","nowLineLocation","setInterval","minutes","getMinutes","setCurrentMinutes","EventLocations","eventLocation","eventStyle","startingPixels","left","textAlign","border","zIndex","scriptAdded","hourToRender","MINIMUM_EVENT_TIME","setNowLineLocation","eventLocations","setEventLocations","useEffect","generateEventLocations","maxTime","getTime","MAMIMUM_EVENT_TIME","minTime","todaysEvents","getDate","allDay","allEventLocations","newEvent","endingPixels","numOfEvents","todaysDate","currentWindowHourStart","startTimeHour","startTimeMinute","endTimeHour","endTimeMinute","OUTLINE_OFFSET","push","forEach","divStyle","display","fontSize","paddingTop","lineHeight","Array","fill","hourBlock","setMinutes","setSeconds","ampm","toLocaleString","hour","min","time","className","initClient","useCallback","init","discoveryDocs","clientId","scope","auth2","getAuthInstance","isSignedIn","get","onLoggedIn","calendarList","listen","signIn","catch","loadGoogleSDK","js","firstScriptTag","document","getElementsByTagName","getElementById","onGoogleLoad","createElement","onload","parentNode","insertBefore","load","reducer","action","User","myStore","combineReducers","store","createStore","Main","rootElement","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.9fe69def.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/quimbly.8567d3c3.png\";","export const addDailyTasks = payload => {\n  // console.log('in actions with', payload)\n  return {\n    type: 'ADDDAILYTASKS',\n    payload,\n  };\n};\n\nexport const setDailyTasks = payload => {\n  // console.log('in actions with', payload)\n  return {\n    type: 'SETDAILYTASKS',\n    payload,\n  };\n};\n\nexport const setCalendars = payload => {\n  // console.log('in setCalendars actions with', payload)\n  return {\n    type: 'SETCALENDARS',\n    payload,\n  };\n};\nexport const setMyQCalendar = payload => {\n  // console.log('in setMyQCalendar actions with', payload)\n  return {\n    type: 'SETMYQCALENDAR',\n    payload,\n  };\n};\nexport const setConfig = payload => {\n  // console.log('in setConfig actions with', payload)\n  return {\n    type: 'SETCONFIG',\n    payload,\n  };\n};\n\n\nexport const toggleHideCalendar = payload => {\n  // console.log('in actions with', payload)\n  return {\n    type: 'TOGGLEHIDECALENDAR',\n    payload,\n  };\n}\n\nexport const setUser = payload => {\n  // console.log('in actions with', payload)\n  return {\n    type: 'SETUSER',\n    payload,\n  };\n};\n\nexport const setEvents = payload => {\n  // console.log('in setEvents actions with', payload)\n  return {\n    type: 'SETEVENTS',\n    payload,\n  };\n};\n\nexport const isLoggedIn = payload => {\n  console.log('in ISLOGGEDIN actions with', payload)\n  return {\n    type: 'ISLOGGEDIN',\n    payload,\n  };\n};\n\n// export const stop = payload => {\n//   return {\n//     type: 'STOP',\n//     payload,\n//   };\n// };\n","/* global gapi */\n\nconst saveConfig = async (config, id) => {\n  console.log('saveconfig:', config, id)\n  await gapi.client.calendar.calendars.update({\n    summary: 'MyQ',\n    description: JSON.stringify(config),\n    calendarId: id\n  });\n  // console.log('save config', { res })\n}\n\nexport default saveConfig;","/* global gapi */\n\nconst getEventsFromCalendars = async (visibleCalendars) => {\n  return visibleCalendars.map(calendar => async () => gapi.client.calendar.events.list({\n    'calendarId': calendar.id,\n    'timeMin': (new Date()).toISOString(),\n    'showDeleted': false,\n    'singleEvents': true,\n    'maxResults': 10,\n    'orderBy': 'startTime'\n  }));\n}\n\nexport default getEventsFromCalendars;","import getEventsFromCalendars from './getEventsFromCalendars';\nimport * as parallel from 'async-parallel';\n\nconst getUpcomingEvents = async (calendars, config) => {\n  // return [];\n  console.log({ calendars, config })\n  const visibleCalendars = calendars.filter(cal => !config.hiddenCalendars.includes(cal.id));\n  console.log({ visibleCalendars })\n\n  const promiseArray = await getEventsFromCalendars(visibleCalendars);\n\n\n  let allEvents = await parallel.map(promiseArray, async apiCall => {\n    const response = await apiCall();\n    return response.result.items;\n  });\n\n  allEvents = allEvents.map((eventArray, idx) => {\n    return eventArray.map(event => ({\n      calendar: visibleCalendars[idx].summary,\n      color: visibleCalendars[idx].backgroundColor,\n      event: event.summary,\n      startTime: event.start.dateTime ? event.start.dateTime : event.start.date,\n      endTime: event.end.dateTime ? event.end.dateTime : event.end.date\n    }))\n  })\n\n  allEvents = allEvents.flat()\n  console.log({ allEvents })\n\n  allEvents = allEvents.sort((a, b) => {\n    return a.startTime > b.startTime ? 1 : -1;\n  }).slice(0, 10);\n\n\n  return allEvents;\n}\n\nexport default getUpcomingEvents;\n","import { React, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setCalendars, toggleHideCalendar, setConfig, setMyQCalendar, setEvents, isLoggedIn } from '../store/actions';\nimport saveConfig from './helperFunctions/saveConfig';\nimport getUpcomingEvents from '../lib/getUpcomingEvents';\n\nimport './calendars.scss';\n\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nfunction Calendars(props) {\n\n  const [selectedCalendars, setSelectedCalendars] = useState(props.calendars.filter(c => !props.config.hiddenCalendars.includes(c)).map(c => c.id));\n\n  const toggleCalendar = async (e) => {\n    setSelectedCalendars([...selectedCalendars, e.target.value]);\n    // don't let them remove myQ\n\n    let chosenCalendar = e.target.value;\n    if (chosenCalendar === 'myQ') return;\n\n    let newHiddenCalendars = [];\n\n\n    // put the calendar in the correct place and save it to newHiddenCalendars\n    if (props.config.hiddenCalendars.includes(chosenCalendar)) {\n      newHiddenCalendars = props.config.hiddenCalendars.filter(c => c !== chosenCalendar);\n      console.log('removing', { newHiddenCalendars })\n    } else {\n      newHiddenCalendars = [...props.config.hiddenCalendars, chosenCalendar];\n      console.log('adding', { newHiddenCalendars })\n    }\n\n    const config = { hiddenCalendars: newHiddenCalendars.filter(i => i) };\n\n    props.setConfig(config);\n    // save it to the config\n    saveConfig(config, props.myQCalendar.id);\n\n    getUpcomingEvents(props.calendars, config)\n      .then(events => {\n        props.setEvents(events);\n      })\n  }\n\n  return (\n    <div id=\"calendars\">\n      <div>\n        <FormControl>\n          <Select\n            multiple\n            value={selectedCalendars}\n            input={<Input />}\n          // MenuProps={MenuProps}\n          >\n            {props.calendars.map((calendar, i) => (\n\n              <MenuItem key={i} onChange={toggleCalendar} style={\n                {\n                  backgroundColor: calendar.backgroundColor,\n                  borderRadius: '4px',\n                  padding: '1em'\n                }} >\n                <input type=\"checkbox\" value={calendar.id} defaultChecked={props.config.hiddenCalendars.includes(calendar.id) ? false : true} />\n                {calendar.summary}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n\n      </div>\n    </div >\n  )\n}\n\nconst mapDispatchToProps = { setCalendars, toggleHideCalendar, setConfig, setMyQCalendar, setEvents, isLoggedIn };\n\nconst mapStateToProps = state => {\n  // console.log('CALENDARS: mapStateToProps', state)\n  return {\n    DailyHabits: state.reduxData.DailyHabits,\n    loggedIn: state.reduxData.loggedIn,\n    calendars: state.reduxData.calendars,\n    config: state.reduxData.config,\n    myQCalendar: state.reduxData.myQCalendar,\n    events: state.reduxData.events\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Calendars);","import React from 'react';\nimport './header.scss';\nimport quimbly from '../../assets/quimbly.png';\nimport Calendars from '../calendars';\n\nconst Header = () => {\n  return (\n    <div id=\"header\">\n      <div>\n        <div id=\"cal-icon\"> 📆 </div>\n        <Calendars />\n        <div id=\"logo-container\">\n          <img id=\"logo\" src={quimbly} alt=\"quimbly logo\" />\n        </div>\n        {/* <LogoutButton /> */}\n      </div>\n    </div>\n  )\n}\n\nexport default Header;\n","import React from 'react';\n\nconst Footer = () => {\n  return(\n    <h1>In Footer</h1>\n  )\n}\n\nexport default Footer;\n","import React from 'react';\nimport Header from './header/header';\nimport Footer from './footer';\n\nclass Layout extends React.Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <main>\n          {this.props.children}\n        </main>\n        <Footer />\n      </>\n    )\n  }\n}\n\nexport default Layout;","/* global gapi */\n\nimport React, { useState } from 'react';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { connect } from 'react-redux';\nimport { setCalendars, toggleHideCalendar, setConfig, setMyQCalendar } from '../store/actions';\nimport moment from 'moment';\n\nimport Modal from \"@material-ui/core/Modal\";\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport './addEvent.scss';\n\nfunction AddEvent(props) {\n  //console.log('addEvent', { props });\n\n  const today = new Date().toISOString().split('T')[0];\n  const now = new Date().toLocaleTimeString().substring(0, 5);\n  const oneHour = new Date(new Date().setHours(new Date().getHours() + 1)).toLocaleTimeString().substring(0, 5);\n  let event = {};\n\n  const [attendeeEmail, setAttendeeEmail] = useState([])\n  const [show, setShow] = useState(false);\n  const [eventName, setEventName] = useState('');\n  const [location, setEventLocation] = useState('');\n  const [description, setDescription] = useState('');\n  const [eventDate, setEventDate] = useState(today);\n  const [eventStartTime, setEventStartTime] = useState(now);\n  const [eventEndTime, setEventEndTime] = useState(oneHour);\n  const [displayRecurringEvent, setDisplayRecurringEvent] = useState(false);\n  const [recurringFrequency, setRecurringFrequency] = useState(false);\n  const [recurringEndDate, setRecurringEndDate] = useState(today)\n\n  // console.log({ attendeeEmail })\n\n  const startDateTime = moment(`${eventDate} ${eventStartTime}`, 'YYYY-MM-DD HH:mm').format();\n  const endDateTime = moment(`${eventDate} ${eventEndTime}`, 'YYYY-MM-DD HH:mm').format();\n  const handleClose = () => {\n    setShow(false);\n    setDisplayRecurringEvent(false);\n    setRecurringFrequency(false);\n    setAttendeeEmail([]);\n  }\n  const handleEndDate = (e) => {\n    const formattedDate = new Date(e.target.value).toISOString().replace(/[-:\\.]/g, '');\n    const formattedDateStart = formattedDate.substring(0, formattedDate.length - 4);\n    const newformattedDate = `${formattedDateStart}Z`;\n    console.log({ newformattedDate, formattedDateStart });\n    setRecurringEndDate(newformattedDate);\n  }\n\n  const saveEvent = () => {\n\n    event = {\n      ...event,\n      'summary': eventName,\n      'location': location,\n      'description': description,\n      'start': {\n        'dateTime': startDateTime,//'2015-05-28T09:00:00-07:00', 2021-07-10T21:20:24.453Z\n        'timeZone': props.myQCalendar.timeZone// default Quimbly time zone\n      },\n      'end': {\n        'dateTime': endDateTime,//'2015-05-28T17:00:00-07:00', TODO - add an hour\n        'timeZone': props.myQCalendar.timeZone\n      },\n      'attendees': attendeeEmail,\n      // 'reminders': {\n      //   'useDefault': false,\n      //   'overrides': [\n      //     { 'method': 'email', 'minutes': 24 * 60 },\n      //     { 'method': 'popup', 'minutes': 10 }\n      //   ]\n      // }\n    };\n\n    if (recurringFrequency) {\n      event.recurrence = [\n        `RRULE:FREQ=${recurringFrequency};UNTIL=${recurringEndDate}`\n      ]\n    }\n\n    // console.log({ event })\n\n    const request = gapi.client.calendar.events.insert({\n      'calendarId': props.myQCalendar.id,\n      'resource': event\n    });\n\n    request.execute(function (event) {\n      console.log('Event created: ' + event.htmlLink);\n    });\n\n    handleClose();\n  }\n\n  return (\n    <div id=\"add-event\">\n      <Button variant=\"outlined\" onClick={() => setShow(true)}>Add Event To Quimbly</Button>\n\n      <Modal\n        open={show}\n        onClose={handleClose}\n      >\n        <Card variant=\"outlined\">\n          <CardContent>\n            <Typography variant=\"h5\" component=\"h2\">Add Event</Typography>\n            <form>\n              <TextField onChange={(e) => setEventName(e.target.value)} id=\"event-name\" label=\"Event Name\" />\n              <TextField onChange={(e) => setEventLocation(e.target.value)} id=\"event-location\" label=\"Event Location\" />\n              <TextField onChange={(e) => setDescription(e.target.value)} id=\"event-description\" label=\"Event Description\" />\n              <TextField\n                onChange={(e) => setEventDate(e.target.value)}\n                type=\"date\"\n                defaultValue={today}\n                id=\"event-date\"\n                label=\"Event Date\" />\n              <TextField\n                onChange={(e) => setEventStartTime(e.target.value)}\n                label=\"Event Start Time\"\n                type=\"time\"\n                defaultValue={now}\n                id=\"event-start-time\" />\n              <TextField\n                onChange={(e) => setEventEndTime(e.target.value)}\n                label=\"Event End Time\"\n                type=\"time\"\n                defaultValue={oneHour}\n                id=\"event-end-time\" />\n              <TextField\n                onChange={(e) => setAttendeeEmail([...attendeeEmail, { email: e.target.value }])}\n                label=\"Email of Attendee\"\n                id=\"attendee-email\" />\n              <FormControl component=\"fieldset\">\n                <FormGroup>\n                  <FormControlLabel\n                    control={<Checkbox onChange={() => setDisplayRecurringEvent(!displayRecurringEvent)} />}\n                    label=\"Recurring Event\"\n                  />\n                </FormGroup>\n              </FormControl>\n              {displayRecurringEvent &&\n                <FormControl>\n                  <InputLabel>Repeats</InputLabel>\n                  <Select\n                    // value={age}\n                    onChange={(e) => setRecurringFrequency(e.target.value)}\n                  >\n                    <MenuItem value=\"DAILY\">Daily</MenuItem>\n                    <MenuItem value=\"WEEKLY\">Weekly</MenuItem>\n                    <MenuItem value=\"MONTHLY\">Monthly</MenuItem>\n                    <MenuItem value=\"YEARLY\">Yearly</MenuItem>\n                  </Select>\n\n                  <TextField\n                    onChange={handleEndDate}\n                    type=\"date\"\n                    defaultValue={today}\n                    id=\"recurring-event-date\"\n                    label=\"End Date\" />\n                </FormControl>\n              }\n              <Button onClick={() => setShow(false)} variant=\"outlined\" color=\"secondary\">Close</Button>\n              <Button onClick={saveEvent} variant=\"outlined\" color=\"primary\">Save changes</Button>\n            </form>\n          </CardContent>\n        </Card>\n      </Modal>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = { setCalendars, toggleHideCalendar, setConfig, setMyQCalendar };\n\nconst mapStateToProps = state => {\n  return ({\n    calendars: state.reduxData.calendars,\n    config: state.reduxData.config,\n    myQCalendar: state.reduxData.myQCalendar\n  })\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AddEvent);\n","const reduxData = {\n  dailyTasks: [],\n  calendars: [],\n  events: [],\n  user: 'bob',\n  loggedIn: false,\n  config: {\n    hiddenCalendars: []\n  },\n  myQCalendar: {}\n};\n\nwindow.reduxData = reduxData;\n\nexport default reduxData;","import data from '../../store/data';\n\n/* global gapi */\n\nasync function createConfig() {\n  const response = await gapi.client.calendar.calendars.insert({\n    summary: 'MyQ',\n    description: JSON.stringify(data.config)\n  })\n\n  console.log(response.result);\n  return response.result;\n}\n\nexport default createConfig;","import data from '../../store/data';\nimport saveConfig from './saveConfig';\nimport createConfig from './createConfig';\n\nasync function loadConfig(calendars) {\n  // finding the MyQ calendar if it exists\n  let myQCalendar = calendars.find(calendar => {\n    return calendar.summary === 'MyQ';\n  });\n\n  console.log('found myQCal in loadConfig', { myQCalendar })\n\n  // console.log({myQCalendar})\n\n  if (!myQCalendar) {\n\n    // if myQ calendar doesn't exist, create MyQ calendar\n    console.log('no myQ calendar - creating one')\n    myQCalendar = await createConfig();\n  }\n\n  let config;\n\n  try {\n    config = JSON.parse(myQCalendar.description);\n  } catch (err) {\n    console.error('ERROR', err);\n  }\n\n  if (!config) {\n    config = data.config;\n    await saveConfig(config, myQCalendar.id);\n  }\n\n  return { config, myQCalendar };\n\n}\n\nexport default loadConfig;\n","import React from 'react';\n\nfunction NowLine(props) {\n  const nowLineStyle = {\n    width: '100%',\n    height: '5px',\n    borderBottom: '5px solid darkred',\n    position: 'absolute',\n    top: props.nowLineLocation\n  }\n\n  setInterval(() => {\n    const currentTime = new Date();\n    const minutes = currentTime.getMinutes();\n    props.setCurrentMinutes(minutes);\n  }, 10000);\n\n\n\n  return (\n    <div style={nowLineStyle} id=\"now-line\"></div>\n  )\n}\n\nexport default NowLine;","import React from 'react';\n\nfunction EventLocations(props) {\n  // console.log({ props })\n  return (\n    <div id=\"event-locations\">\n      {props.eventLocation && props.eventLocation.map((event, i) => {\n        const eventStyle = {\n          backgroundColor: event.color,\n          position: 'absolute',\n          top: event.startingPixels,\n          height: event.height,\n          color: 'white',\n          padding: '1em',\n          width: event.width,\n          left: event.left,\n          textAlign: 'center',\n          border: '1px solid gray',\n          zIndex: event.zIndex\n        }\n        return (\n          <div key={i} style={eventStyle}>\n            {event.event}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default EventLocations;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setCalendars, toggleHideCalendar, setConfig, setMyQCalendar, setEvents, isLoggedIn } from '../../store/actions';\nimport NowLine from './nowLine';\nimport getUpcomingEvents from '../../lib/getUpcomingEvents';\nimport EventLocations from './events/eventLocations';\nimport config from '../../config';\n\nimport './dailyOutline.scss';\n/* global gapi */\n\nfunction DailyOutline(props) {\n  // console.log('dailyOutline', props.events); \n\n  let hourToRender = new Date().getHours() + config.MINIMUM_EVENT_TIME / 1000 / 60 / 60;\n  const [minutes, setCurrentMinutes] = useState(0);\n  const [nowLineLocation, setNowLineLocation] = useState('135px');\n  const [eventLocations, setEventLocations] = useState([]);\n\n  useEffect(() => {\n    getUpcomingEvents(props.calendars, props.config)\n      .then(events => {\n        props.setEvents(events);;\n        generateEventLocations(events);\n      })\n\n  }, [])\n\n  const generateEventLocations = (events) => {\n    const maxTime = new Date().getTime() + config.MAMIMUM_EVENT_TIME;\n    const minTime = new Date().getTime() + config.MINIMUM_EVENT_TIME;\n\n    // get today's events\n    const todaysEvents = events.filter(event => {\n      // check to see if it is an all day event\n      // google cal returns all day events as the previous day so we need to add one to get the correct day\n      if (!event.startTime.split('T')[1]) {\n        if (new Date(event.startTime).getDate() + 1 === new Date().getDate()) {\n          event.allDay = true;\n          return true;\n        } else {\n          return false;\n        }\n      }\n\n      const startTime = new Date(event.startTime).getTime();\n      // const endTime = new Date(event.endTime).getTime();\n\n      if (maxTime >= startTime && startTime >= minTime) {\n        return true;\n      }\n\n    });\n\n    // console.log({ todaysEvents })\n\n    const allEventLocations = [];\n\n    // find the starting and ending position for each event\n    const eventLocations = todaysEvents.map((event, idx) => {\n      const newEvent = {\n        ...event,\n        startingPixels: 0,\n        endingPixels: 0,\n        height: 0,\n        left: 0,\n        width: '200px',\n        numOfEvents: 0\n      }\n\n      const todaysDate = new Date().getDate();\n      const eventDate = new Date(event.startTime).getDate();\n\n      const currentWindowHourStart = new Date(minTime).getHours();\n\n      const startTimeHour = new Date(event.startTime).getHours() - currentWindowHourStart;\n      const startTimeMinute = new Date(event.startTime).getMinutes();\n      const endTimeHour = new Date(event.endTime).getHours() - currentWindowHourStart;\n      const endTimeMinute = new Date(event.endTime).getMinutes();\n      // console.log(event.event, { startTimeHour, startTimeMinute, endTimeMinute, endTimeMinute, currentWindowHourStart, minTime });\n\n      newEvent.startingPixels = todaysDate === eventDate ? `${config.OUTLINE_OFFSET + (60 * startTimeHour) + startTimeMinute}px` : `${config.OUTLINE_OFFSET + (24 * 60) + (60 * startTimeHour) + startTimeMinute}px`;\n      newEvent.endingPixels = todaysDate === eventDate ? `${config.OUTLINE_OFFSET + (60 * endTimeHour) + endTimeMinute}px` : `${config.OUTLINE_OFFSET + (24 * 60) + (60 * endTimeHour) + endTimeMinute}px`;\n      newEvent.height = `${(config.OUTLINE_OFFSET + (60 * endTimeHour) + endTimeMinute) - (config.OUTLINE_OFFSET + (60 * startTimeHour) + startTimeMinute)}px`;\n\n      allEventLocations.push(newEvent)\n\n      console.log({ allEventLocations })\n      allEventLocations.forEach((e, i) => {\n        if ((e.startingPixels <= newEvent.startingPixels && newEvent.startingPixels <= e.endingPixels) && i !== idx) {\n          console.log(newEvent.event, 'found a dup event', e, newEvent);\n          newEvent.numOfEvents++;\n          newEvent.left = `${newEvent.numOfEvents * 180}px`;\n        }\n      });\n\n      if (event.allDay) {\n        newEvent.startingPixels = '183px';\n        newEvent.left = '50px';\n        newEvent.zIndex = 5;\n        // console.log('checking for an all day event', { event, newEvent })\n      }\n\n      return (newEvent)\n    })\n\n    // console.log({ eventLocations, todaysEvents })\n    setEventLocations(eventLocations);\n  };\n\n  useEffect(() => {\n    setNowLineLocation(config.OUTLINE_OFFSET + 120 + minutes);\n  }, [minutes]);\n\n\n\n  const divStyle = {\n    display: 'block',\n    fontSize: '.8em',\n    paddingTop: '5px',\n    height: '60px',\n    textAlign: 'right',\n    borderBottom: '1px dotted black'\n  };\n\n  const dateStyle = {\n    borderRadius: '15px',\n    backgroundColor: 'darkCyan',\n    color: 'white',\n    width: '25px',\n    height: '25px',\n    textAlign: 'center',\n    lineHeight: '25px',\n    position: 'fixed'\n  }\n\n  const dateContainer = {\n    backgroundColor: 'white',\n    position: 'fixed',\n    top: '180px',\n    borderBottom: '2px solid black',\n    width: '100%',\n    height: '39px',\n    zIndex: '2'\n  }\n\n  return (\n    <>\n      <div style={dateContainer}>\n        <div style={dateStyle} id=\"date\">{new Date().getDate()}</div>\n      </div>\n      <div id='calendar-outline'>\n        {new Array(26).fill(1).map((value, i) => {\n          const hourBlock = new Date();\n          hourBlock.setHours(hourToRender + i)\n          hourBlock.setMinutes(0);\n          hourBlock.setSeconds(0);\n          const ampm = `${hourBlock.toLocaleString().split(' ')[2]}`;\n          const hour = `${hourBlock.toLocaleString().split(' ')[1].split(':')[0]}`;\n          const min = `${hourBlock.toLocaleString().split(' ')[1].split(':')[1]}`;\n          const time = `${hour}:${min}${ampm}`;\n\n          return (\n            <div key={i} style={divStyle} className='fifteen-min'>{time}</div>\n          )\n        })\n\n        }\n\n      </div>\n      <EventLocations\n        eventLocation={eventLocations}\n      />\n      <NowLine\n        setCurrentMinutes={setCurrentMinutes}\n        nowLineLocation={nowLineLocation}\n      />\n    </>\n  )\n}\n\nconst mapDispatchToProps = { setCalendars, toggleHideCalendar, setConfig, setMyQCalendar, setEvents, isLoggedIn };\n\nconst mapStateToProps = state => {\n  return {\n    DailyHabits: state.reduxData.DailyHabits,\n    loggedIn: state.reduxData.loggedIn,\n    calendars: state.reduxData.calendars,\n    config: state.reduxData.config,\n    myQCalendar: state.reduxData.myQCalendar,\n    events: state.reduxData.events\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DailyOutline);","/* global gapi */\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport Layout from './components/layout';\n// import User from './components/user';\nimport { connect } from 'react-redux';\nimport { setCalendars, toggleHideCalendar, setConfig, setMyQCalendar, setEvents, isLoggedIn } from './store/actions';\nimport AddEvent from './components/addEvent';\nimport loadConfig from './components/helperFunctions/loadConfig';\nimport DailyOutline from './components/dailyOutline/dailyOutline';\n\nlet scriptAdded;\n\nfunction App(props) {\n  const [show, setShow] = useState(false);\n\n  console.log('APP', { props });\n\n  // Init the Google API client\n  const initClient = useCallback(() => {\n    window.gapi.client.init({\n      discoveryDocs: ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'],\n      clientId: '666346298716-glkmqvi7n7djp4a69757cnvjhga7skkp.apps.googleusercontent.com',\n      scope: 'https://www.googleapis.com/auth/calendar'\n    }).then(() => {\n      const isLoggedIn = gapi.auth2.getAuthInstance().isSignedIn.get();\n\n      const onLoggedIn = async () => {\n        console.log('user is signed in');\n        props.isLoggedIn(true);\n\n        // get all the calendars\n        const response = await gapi.client.calendar.calendarList.list();\n\n        //returns an array of calendar objects and all of their prefrences (id, url, color, ...)\n        // TODO: loading annimation\n        let calendars = response.result.items;\n        const { config, myQCalendar } = await loadConfig(calendars);\n        if (!calendars.find((calendar) => calendar.id === myQCalendar.id)) {\n          calendars.push(myQCalendar);\n        }\n\n        props.setConfig(config);\n        props.setCalendars(calendars);\n        props.setMyQCalendar(myQCalendar);\n        console.log('config!!!', { config, calendars, myQCalendar })\n\n        setShow(true);\n      }\n\n      // if the user is not logged in, log them into google and load their calendars with events\n      if (!isLoggedIn) {\n        // Listen for sign-in state changes.\n        console.log('not logged in')\n        gapi.auth2.getAuthInstance().isSignedIn.listen(onLoggedIn);\n        return gapi.auth2.getAuthInstance().signIn();\n      }\n\n      // if they are already logged in, load their calendars with events\n      onLoggedIn();\n\n    })\n      .catch(err => console.error('in catch for initClient', err))\n  }, [props]);\n\n  // Load the SDK asynchronously\n  // Adds google API script tag and loads the SDK\n  // Gives you a window event that you can bind to\n  const loadGoogleSDK = useCallback(() => {\n    scriptAdded = true;\n    let js;\n    let firstScriptTag = document.getElementsByTagName('script')[0];\n    if (document.getElementById('google-jssdk')) {\n      window.onGoogleLoad();\n      return;\n    }\n    js = document.createElement('script');\n    js.id = 'google-jssdk';\n    js.src = \"https://apis.google.com/js/api.js?onload=onGoogleLoad\";\n    js.onload = \"onGoogleLoad\";\n    firstScriptTag.parentNode.insertBefore(js, firstScriptTag);\n  }, []);\n\n  useEffect(() => {\n    // Load the Google API Client\n    window.onGoogleLoad = () => {\n      window.gapi.load('client', initClient);\n    }\n    if (!scriptAdded) {\n      loadGoogleSDK();\n    }\n  }, [initClient, loadGoogleSDK]);\n\n  return (\n    <Layout>\n      {show &&\n        <div>\n          {/* <User /> */}\n          {/* <UpcomingEvents /> */}\n          <DailyOutline />\n          <AddEvent />\n        </div>\n      }\n    </Layout>\n  );\n};\n\nconst mapDispatchToProps = { setCalendars, toggleHideCalendar, setConfig, setMyQCalendar, setEvents, isLoggedIn };\n\nconst mapStateToProps = state => {\n  // console.log('APP: mapStateToProps', state)\n  return {\n    DailyHabits: state.reduxData.DailyHabits,\n    loggedIn: state.reduxData.loggedIn,\n    calendars: state.reduxData.calendars,\n    config: state.reduxData.config,\n    myQCalendar: state.reduxData.myQCalendar,\n    events: state.reduxData.events\n  }\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);","import reduxData from './data';\n\nconst reducer = (state = reduxData, action) => {\n  let { type, payload } = action;\n  // console.log('in reducer with',type, state, payload)\n  switch (type) {\n    // case 'ADDDAILYTASKS':\n    //   state.DailyTasks.push(payload);\n    //   console.log('adding a daily task', payload);\n    //   return { DailyTasks: [...state.DailyTasks] };\n\n    // case 'SETDAILYTASKS':\n    //     console.log('setting daily tasks', payload);\n    //   return { DailyTasks: payload };\n\n    case 'SETCONFIG':\n      // console.log('SETCONFIG:', payload)\n      return { ...state, config: payload };\n\n    case 'SETCALENDARS':\n      // console.log('SETCALENDARS:', payload)\n      return { ...state, calendars: payload };\n\n    case 'SETEVENTS':\n      // console.log('reducer: SETEVENTS', payload)\n      return { ...state, events: payload }\n\n    case 'SETMYQCALENDAR':\n      // console.log('SETMYQCALENDAR:', payload)\n      return { ...state, myQCalendar: payload };\n\n    // case 'TOGGLEHIDECALENDAR':\n    //   // if the payload is in the hiddenCalendars, remove it - otherwise add it\n    //   // the payload is the id of the hidden calendar\n    //   let hiddenCalendars = state.config.hiddenCalendars;\n    //   if (hiddenCalendars.includes(payload)) {\n    //     hiddenCalendars = hiddenCalendars.filter(calendar => calendar !== payload);\n    //   } else {\n    //     hiddenCalendars.push(payload);\n    //   }\n    //   console.log('redux:', hiddenCalendars)\n    //   return { ...state, config: { hiddenCalendars } };\n\n    case 'SETUSER':\n      // console.log('setting the user', payload);\n      state.User = payload;\n      return state;\n\n    case 'ISLOGGEDIN':\n      state.loggedIn = payload;\n      // console.log('setting the logged in state', payload, state);\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import { createStore, combineReducers } from \"redux\";\n\nimport reducer from \"./reducer.js\";\n\nlet myStore = combineReducers({ reduxData:reducer });\n\nconst store = () =>\n  createStore(myStore);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nimport './reset.scss';\nimport './global.scss';\n\nimport createStore from './store/index.js';\nconst store = createStore();\n\nfunction Main() {\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n\n","module.exports = {\n  MINIMUM_EVENT_TIME: 2 * 60 * 1000 * 60 * -1,\n  MAMIMUM_EVENT_TIME: 24 * 60 * 1000 * 60,\n  OUTLINE_OFFSET: 217\n}"],"sourceRoot":""}